Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cores: 2
Rules claiming more threads will be scaled down.
Job stats:
job                          count
-------------------------  -------
all                              1
compute_psd_by_trial_type        2
plot_psds                        1
total                            4

Select jobs to execute...

[Wed Feb  7 16:37:50 2024]
rule compute_psd_by_trial_type:
    input: /users/koehler/projects/alpaca_use_case/data/i140703-001.nix
    output: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGHF.pickle
    jobid: 2
    reason: Missing output files: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGHF.pickle
    wildcards: session_code=i140703-001
    resources: tmpdir=/scratch/709570


[Wed Feb  7 16:37:50 2024]
rule compute_psd_by_trial_type:
    input: /users/koehler/projects/alpaca_use_case/data/l101210-001.nix
    output: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGHF.pickle
    jobid: 3
    reason: Missing output files: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGHF.pickle
    wildcards: session_code=l101210-001
    resources: tmpdir=/scratch/709570

[2024-02-07 16:37:51,462] root INFO: Start time: 2024-02-07 16:37:51.462376
[2024-02-07 16:37:51,462] root INFO: Start time: 2024-02-07 16:37:51.462507
[2024-02-07 16:37:51,552] root INFO: Processing /users/koehler/projects/alpaca_use_case/data/i140703-001.nix; skipping channels None
[2024-02-07 16:37:51,552] alpaca.decorator - INFO: Line 123 -> block = load_data(subject_file)
[2024-02-07 16:37:51,575] root INFO: Processing /users/koehler/projects/alpaca_use_case/data/l101210-001.nix; skipping channels [2, 4]
[2024-02-07 16:37:51,575] alpaca.decorator - INFO: Line 123 -> block = load_data(subject_file)
[2024-02-07 16:40:01,665] root INFO: Extracting starting events for PGLF
[2024-02-07 16:40:01,668] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:40:41,177] root INFO: Extracting starting events for PGLF
[2024-02-07 16:40:41,178] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:40:55,360] root INFO: Extracting trial epochs for PGLF
[2024-02-07 16:40:55,360] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:41:49,045] root INFO: Cutting trials of type PGLF
[2024-02-07 16:41:49,047] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:41:59,192] root INFO: Extracting trial epochs for PGLF
[2024-02-07 16:41:59,192] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:42:51,813] root INFO: Computing PSD
[2024-02-07 16:42:51,815] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:51,904] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:51,959] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
/users/koehler/miniconda3/envs/provenance-snakemake/lib/python3.9/site-packages/scipy/signal/filter_design.py:1630: BadCoefficients: Badly conditioned filter coefficients (numerator): the results may be meaningless
  warnings.warn("Badly conditioned filter coefficients (numerator): the "
[2024-02-07 16:42:52,025] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:52,030] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:52,033] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:52,123] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:52,176] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:52,239] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:52,245] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:52,248] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:52,337] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:52,390] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:52,461] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:52,467] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:52,470] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:52,560] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:52,613] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:52,676] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:52,682] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:52,685] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:52,775] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:52,828] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:52,891] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:52,897] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:52,900] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:52,989] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:53,042] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:53,113] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:53,119] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:53,122] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:53,212] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:53,265] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:53,327] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:53,333] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:53,336] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:53,426] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:53,479] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:53,543] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:53,549] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:53,552] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:53,642] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:53,695] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:53,758] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:53,763] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:53,767] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:53,857] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:53,910] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:53,981] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:53,987] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:53,991] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:54,081] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:54,134] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:54,205] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:54,211] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:54,214] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:54,305] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:54,358] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:54,422] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:54,428] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:54,432] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:54,522] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:54,574] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:54,638] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:54,643] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:54,648] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:54,737] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:54,790] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:54,854] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:54,859] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:54,864] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:54,954] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:55,007] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:55,071] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:55,076] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:55,080] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:55,170] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:55,223] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:55,288] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:55,294] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:55,297] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:55,387] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:55,440] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:55,503] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:55,509] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:55,513] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:55,602] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:55,656] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:55,720] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:55,726] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:55,729] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:55,819] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:55,872] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:55,935] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:55,941] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:55,945] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:56,035] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:56,088] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:56,152] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:56,158] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:56,161] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:56,251] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:56,305] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:56,377] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:56,383] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:56,386] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:56,476] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:56,530] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:56,601] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:56,607] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:56,610] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:56,700] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:56,754] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:56,817] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:56,823] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:56,827] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:56,917] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:56,970] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:57,041] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:57,047] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:57,051] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:57,141] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:57,195] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:57,258] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:57,264] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:57,268] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:57,357] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:57,410] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:57,474] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:57,480] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:57,483] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:57,573] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:57,627] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:57,690] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:57,696] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:57,700] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:57,790] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:57,844] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:57,908] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:57,914] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:57,917] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:58,006] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:58,059] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:58,123] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:58,129] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:58,133] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:58,223] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:58,276] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:58,341] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:58,347] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:58,350] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:42:58,440] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:42:58,494] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:42:58,557] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:42:58,563] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:42:58,567] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:42:58,593] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGLF.pickle
[2024-02-07 16:42:58,593] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:43:16,407] root INFO: Extracting starting events for PGHF
[2024-02-07 16:43:16,407] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:43:18,595] root INFO: Cutting trials of type PGLF
[2024-02-07 16:43:18,595] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:44:10,140] root INFO: Extracting trial epochs for PGHF
[2024-02-07 16:44:10,143] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:44:44,846] root INFO: Computing PSD
[2024-02-07 16:44:44,847] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:44,923] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:44,987] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
/users/koehler/miniconda3/envs/provenance-snakemake/lib/python3.9/site-packages/scipy/signal/filter_design.py:1630: BadCoefficients: Badly conditioned filter coefficients (numerator): the results may be meaningless
  warnings.warn("Badly conditioned filter coefficients (numerator): the "
[2024-02-07 16:44:45,054] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:45,059] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:45,064] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:45,143] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:45,203] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:45,267] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:45,273] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:45,276] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:45,353] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:45,410] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:45,475] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:45,480] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:45,484] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:45,561] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:45,618] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:45,691] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:45,697] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:45,700] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:45,778] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:45,835] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:45,899] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:45,905] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:45,908] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:45,985] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:46,045] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:46,108] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:46,114] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:46,117] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:46,194] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:46,255] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:46,319] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:46,326] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:46,329] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:46,406] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:46,466] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:46,530] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:46,535] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:46,539] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:46,617] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:46,674] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:46,746] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:46,751] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:46,755] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:46,832] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:46,890] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:46,954] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:46,959] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:46,963] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:47,041] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:47,098] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:47,162] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:47,168] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:47,171] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:47,249] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:47,309] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:47,373] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:47,379] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:47,383] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:47,460] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:47,517] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:47,581] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:47,587] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:47,591] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:47,667] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:47,725] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:47,789] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:47,794] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:47,797] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:47,875] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:47,932] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:47,996] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:48,001] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:48,004] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:48,082] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:48,141] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:48,204] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:48,210] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:48,215] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:48,293] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:48,351] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:48,415] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:48,421] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:48,425] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:48,502] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:48,562] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:48,626] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:48,631] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:48,635] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:48,712] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:48,770] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:48,834] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:48,840] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:48,843] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:48,921] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:48,981] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:49,044] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:49,050] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:49,054] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:49,131] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:49,189] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:49,252] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:49,258] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:49,262] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:49,340] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:49,398] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:49,461] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:49,467] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:49,470] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:49,548] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:49,605] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:49,668] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:49,674] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:49,678] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:49,755] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:49,812] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:49,877] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:49,882] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:49,886] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:49,963] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:50,021] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:50,086] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:50,091] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:50,095] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:50,172] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:50,229] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:50,293] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:50,298] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:50,301] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:50,378] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:50,436] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:50,500] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:50,506] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:50,509] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:50,586] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:50,644] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:50,708] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:50,714] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:50,717] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:50,794] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:50,854] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:50,931] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:50,937] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:50,940] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:51,018] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:51,077] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:51,149] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:51,154] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:51,157] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:51,234] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:51,292] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:51,356] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:51,361] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:51,364] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:51,442] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:51,501] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:51,572] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:51,577] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:51,580] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:51,657] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:51,717] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:51,787] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:51,793] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:51,796] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:51,874] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:51,934] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:51,997] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:52,003] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:52,007] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:44:52,084] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:44:52,142] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:44:52,205] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:44:52,210] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:44:52,213] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:44:52,241] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGLF.pickle
[2024-02-07 16:44:52,241] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:45:03,705] root INFO: Cutting trials of type PGHF
[2024-02-07 16:45:03,705] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:45:18,199] root INFO: Extracting starting events for PGHF
[2024-02-07 16:45:18,200] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:46:06,941] root INFO: Computing PSD
[2024-02-07 16:46:06,942] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:07,032] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:07,086] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:07,157] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:07,163] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:07,167] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:07,257] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:07,311] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:07,374] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:07,380] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:07,383] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:07,473] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:07,525] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:07,588] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:07,594] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:07,598] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:07,687] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:07,742] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:07,805] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:07,810] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:07,814] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:07,903] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:07,956] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:08,019] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:08,026] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:08,029] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:08,119] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:08,172] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:08,235] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:08,241] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:08,245] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:08,334] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:08,387] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:08,451] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:08,458] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:08,461] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:08,550] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:08,604] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:08,668] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:08,674] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:08,678] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:08,767] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:08,820] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:08,883] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:08,890] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:08,893] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:08,983] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:09,036] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:09,099] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:09,105] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:09,109] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:09,198] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:09,252] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:09,317] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:09,323] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:09,327] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:09,417] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:09,470] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:09,532] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:09,538] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:09,542] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:09,631] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:09,684] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:09,747] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:09,753] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:09,756] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:09,845] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:09,899] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:09,962] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:09,969] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:09,972] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:10,062] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:10,115] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:10,178] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:10,184] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:10,188] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:10,277] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:10,331] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:10,394] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:10,400] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:10,404] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:10,493] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:10,547] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:10,621] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:10,627] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:10,632] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:10,721] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:10,773] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:10,844] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:10,850] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:10,853] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:10,942] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:10,995] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:11,059] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:11,065] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:11,068] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:11,158] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:11,211] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:11,274] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:11,281] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:11,284] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:11,374] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:11,427] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:11,490] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:11,496] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:11,499] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:11,589] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:11,641] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:11,712] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:11,717] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:11,720] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:11,809] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:11,862] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:11,927] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:11,933] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:11,936] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:12,026] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:12,079] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:12,142] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:12,148] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:12,152] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:12,241] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:12,294] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:12,365] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:12,370] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:12,374] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:12,463] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:12,517] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:12,579] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:12,585] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:12,588] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:12,677] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:12,731] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:12,795] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:12,801] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:12,804] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:12,894] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:12,948] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:13,010] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:13,016] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:13,019] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:13,109] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:13,163] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:13,226] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:13,232] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:13,236] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:13,326] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:13,379] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:13,442] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:13,448] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:13,451] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:13,541] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:13,595] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:13,658] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:13,664] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:13,668] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:13,757] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:13,810] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:13,881] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:13,887] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:13,890] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:46:13,979] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:46:14,032] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:46:14,095] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:46:14,101] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:46:14,104] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:46:14,131] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGHF.pickle
[2024-02-07 16:46:14,131] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:46:31,943] root INFO: Extracting starting events for SGLF
[2024-02-07 16:46:31,944] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:46:36,337] root INFO: Extracting trial epochs for PGHF
[2024-02-07 16:46:36,337] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:47:25,576] root INFO: Extracting trial epochs for SGLF
[2024-02-07 16:47:25,577] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:47:55,769] root INFO: Cutting trials of type PGHF
[2024-02-07 16:47:55,770] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:48:19,200] root INFO: Cutting trials of type SGLF
[2024-02-07 16:48:19,201] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:49:22,331] root INFO: Computing PSD
[2024-02-07 16:49:22,333] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:22,411] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:22,473] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:22,545] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:22,551] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:22,555] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:22,633] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:22,690] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:22,759] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:22,764] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:22,768] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:22,845] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:22,902] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:22,966] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:22,972] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:22,975] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:23,053] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:23,110] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:23,175] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:23,181] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:23,184] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:23,261] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:23,321] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:23,385] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:23,390] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:23,393] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:23,470] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:23,528] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:23,597] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:23,602] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:23,606] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:23,683] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:23,741] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:23,805] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:23,811] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:23,815] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:23,891] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:23,948] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:24,012] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:24,018] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:24,021] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:24,098] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:24,156] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:24,220] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:24,226] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:24,229] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:24,306] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:24,365] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:24,428] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:24,434] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:24,437] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:24,514] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:24,571] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:24,643] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:24,649] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:24,653] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:24,730] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:24,785] root INFO: Computing PSD
[2024-02-07 16:49:24,785] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:24,787] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:24,851] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:24,857] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:24,860] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:24,875] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:24,928] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:24,937] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:24,991] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:24,997] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:24,997] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,000] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,068] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,073] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,076] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,089] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,142] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,154] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,205] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,210] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,212] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,214] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,275] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,281] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,284] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,304] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,356] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,361] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,418] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,419] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,425] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,429] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,483] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,489] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,492] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,518] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,570] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,572] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,630] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,634] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,640] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,643] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,695] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,701] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,704] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,733] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,781] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,785] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,839] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:25,848] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,854] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,858] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,903] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:25,909] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:25,912] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:25,946] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:25,989] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,000] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,050] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,063] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,069] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,072] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,122] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,128] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,131] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,161] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,208] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,213] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,265] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,277] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,282] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,286] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,337] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,342] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,346] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,376] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,423] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,429] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,483] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,493] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,498] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,502] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,548] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,554] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,557] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,592] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,634] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,644] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,692] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,707] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,713] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,715] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,756] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,761] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,765] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,806] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,842] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:26,860] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,900] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:26,923] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,929] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,932] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:26,965] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:26,970] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:26,974] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,021] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,052] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,074] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,109] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,145] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,150] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,153] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,181] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,186] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,190] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,243] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,268] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,297] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,325] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,369] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,374] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,378] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,390] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,395] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,399] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,468] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,475] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,522] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,533] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,593] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,597] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,600] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,602] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,603] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,605] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,681] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,691] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,740] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,744] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,807] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,812] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:27,813] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,815] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,817] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:27,820] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:27,897] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,905] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:27,954] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:27,957] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,019] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,025] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,026] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,028] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,032] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,035] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,113] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,117] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,170] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,170] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,234] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,239] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,241] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,243] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,247] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,250] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,322] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,339] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,380] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,392] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,444] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,449] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,453] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,456] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,461] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,464] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,531] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,554] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,589] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,608] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,654] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,660] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,663] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,670] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,676] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,679] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,741] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,770] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,798] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,823] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:28,870] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,876] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,880] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,886] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:28,892] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:28,895] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:28,957] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:28,985] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,014] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,038] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,079] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,084] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,088] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,102] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,108] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,111] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,166] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,200] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,223] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,253] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,288] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,293] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,297] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,324] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,330] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,333] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,374] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,423] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,432] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,476] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,496] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,501] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,504] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,539] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,545] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,549] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,582] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,638] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,640] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,692] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,704] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,709] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,712] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,755] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,761] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,765] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:29,790] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,848] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,855] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:29,908] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:29,912] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,917] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,920] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:49:29,948] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGHF.pickle
[2024-02-07 16:49:29,948] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:49:29,979] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:29,985] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:29,988] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:30,078] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:30,131] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:30,195] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:30,201] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:30,205] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:30,294] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:30,348] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:30,411] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:30,417] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:30,421] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:30,510] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:30,565] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:30,636] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:30,641] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:30,645] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:30,734] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:30,788] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:30,850] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:30,857] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:30,860] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:30,949] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:31,002] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:31,066] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:31,072] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:31,075] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:31,164] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:31,217] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:31,288] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:31,294] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:31,297] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:31,386] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:31,438] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:31,503] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:31,508] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:31,512] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:31,601] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:31,654] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:31,718] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:31,724] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:31,727] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:31,817] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:31,870] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:31,934] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:31,939] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:31,943] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:32,032] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:32,085] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:32,149] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:32,154] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:32,158] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:32,247] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:32,300] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:32,363] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:32,369] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:32,373] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:32,462] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:32,515] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:32,578] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:32,584] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:32,587] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:32,676] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:32,729] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:32,801] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:32,806] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:32,810] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:32,900] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:32,953] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:33,024] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:33,029] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:33,033] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:33,123] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:33,177] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:33,248] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:33,254] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:33,258] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:33,347] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:33,400] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:33,471] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:33,477] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:33,481] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:49:33,571] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:49:33,624] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:49:33,687] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:49:33,693] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:49:33,697] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:49:33,730] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGLF.pickle
[2024-02-07 16:49:33,730] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:49:51,545] root INFO: Extracting starting events for SGHF
[2024-02-07 16:49:51,546] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:49:55,938] root INFO: Extracting starting events for SGLF
[2024-02-07 16:49:55,938] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:50:45,463] root INFO: Extracting trial epochs for SGHF
[2024-02-07 16:50:45,466] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:51:14,660] root INFO: Extracting trial epochs for SGLF
[2024-02-07 16:51:14,660] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:51:39,049] root INFO: Cutting trials of type SGHF
[2024-02-07 16:51:39,049] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:52:33,909] root INFO: Cutting trials of type SGLF
[2024-02-07 16:52:33,911] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:52:41,531] root INFO: Computing PSD
[2024-02-07 16:52:41,531] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:41,621] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:41,676] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:41,747] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:41,753] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:41,758] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:41,847] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:41,901] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:41,972] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:41,977] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:41,981] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:42,071] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:42,126] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:42,197] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:42,203] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:42,206] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:42,296] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:42,350] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:42,421] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:42,426] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:42,430] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:42,520] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:42,573] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:42,644] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:42,649] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:42,653] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:42,743] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:42,797] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:42,860] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:42,865] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:42,869] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:42,959] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:43,012] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:43,083] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:43,089] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:43,092] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:43,181] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:43,235] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:43,297] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:43,303] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:43,306] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:43,396] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:43,450] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:43,512] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:43,517] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:43,521] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:43,609] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:43,662] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:43,725] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:43,730] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:43,734] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:43,824] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:43,877] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:43,940] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:43,945] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:43,949] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:44,039] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:44,093] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:44,163] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:44,169] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:44,172] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:44,261] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:44,315] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:44,378] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:44,384] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:44,387] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:44,477] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:44,530] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:44,602] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:44,607] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:44,611] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:44,700] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:44,753] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:44,817] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:44,822] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:44,826] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:44,916] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:44,969] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:45,032] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:45,037] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:45,041] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:45,131] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:45,184] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:45,247] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:45,253] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:45,255] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:45,346] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:45,400] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:45,462] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:45,468] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:45,472] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:45,561] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:45,614] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:45,677] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:45,682] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:45,686] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:45,776] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:45,830] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:45,900] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:45,906] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:45,909] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:45,998] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:46,051] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:46,114] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:46,119] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:46,122] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:46,212] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:46,265] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:46,335] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:46,341] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:46,343] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:46,433] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:46,485] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:46,557] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:46,562] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:46,565] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:46,654] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:46,707] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:46,770] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:46,776] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:46,779] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:46,868] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:46,921] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:46,993] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:46,998] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:47,002] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:47,091] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:47,145] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:47,215] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:47,221] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:47,224] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:47,313] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:47,366] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:47,429] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:47,435] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:47,439] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:47,528] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:47,581] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:47,652] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:47,658] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:47,662] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:47,751] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:47,806] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:47,869] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:47,874] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:47,877] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:52:47,967] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:52:48,020] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:52:48,081] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:52:48,087] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:52:48,090] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:52:48,115] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGHF.pickle
[2024-02-07 16:52:48,116] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:53:34,001] root INFO: End time: 2024-02-07 16:53:34.001088; Total processing time:0:15:42.538581
[Wed Feb  7 16:53:36 2024]
Finished job 3.
1 of 4 steps (25%) done
[2024-02-07 16:54:00,600] root INFO: Computing PSD
[2024-02-07 16:54:00,601] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:00,679] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:00,740] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:00,806] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:00,812] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:00,815] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:00,893] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:00,951] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:01,016] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:01,022] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:01,026] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:01,104] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:01,162] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:01,228] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:01,234] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:01,238] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:01,315] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:01,373] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:01,438] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:01,444] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:01,447] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:01,525] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:01,586] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:01,651] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:01,657] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:01,661] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:01,738] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:01,797] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:01,862] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:01,868] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:01,871] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:01,949] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:02,007] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:02,082] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:02,088] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:02,092] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:02,169] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:02,229] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:02,295] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:02,301] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:02,304] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:02,381] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:02,439] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:02,504] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:02,510] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:02,514] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:02,591] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:02,650] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:02,716] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:02,721] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:02,725] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:02,802] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:02,863] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:02,937] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:02,943] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:02,947] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:03,024] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:03,083] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:03,148] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:03,154] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:03,158] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:03,235] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:03,296] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:03,361] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:03,367] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:03,371] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:03,447] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:03,506] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:03,580] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:03,586] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:03,589] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:03,667] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:03,728] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:03,794] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:03,800] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:03,803] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:03,880] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:03,941] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:04,006] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:04,012] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:04,016] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:04,092] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:04,153] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:04,218] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:04,224] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:04,227] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:04,304] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:04,364] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:04,439] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:04,445] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:04,449] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:04,527] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:04,585] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:04,650] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:04,656] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:04,661] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:04,738] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:04,797] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:04,862] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:04,868] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:04,871] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:04,948] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:05,009] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:05,074] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:05,080] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:05,084] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:05,161] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:05,221] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:05,286] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:05,292] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:05,295] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:05,372] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:05,432] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:05,498] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:05,503] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:05,507] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:05,585] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:05,643] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:05,708] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:05,713] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:05,717] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:05,795] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:05,856] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:05,930] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:05,936] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:05,939] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:06,017] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:06,075] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:06,140] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:06,146] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:06,149] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:06,227] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:06,288] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:06,352] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:06,358] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:06,362] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:06,439] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:06,500] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:06,574] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:06,580] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:06,583] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:06,660] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:06,721] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:06,787] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:06,793] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:06,796] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:06,873] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:06,935] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:07,001] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:07,006] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:07,010] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:07,087] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:07,145] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:07,210] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:07,216] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:07,219] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:07,296] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:07,354] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:07,419] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:07,425] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:07,429] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:07,506] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:07,565] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:07,629] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:07,635] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:07,639] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:07,716] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:07,773] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:07,839] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:07,845] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:07,849] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:54:07,927] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:54:07,985] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:54:08,050] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:54:08,057] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:54:08,060] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:54:08,087] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGLF.pickle
[2024-02-07 16:54:08,088] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:54:34,165] root INFO: Extracting starting events for SGHF
[2024-02-07 16:54:34,165] alpaca.decorator - INFO: Line 132 -> events = get_events(block.segments[0],
                            trial_event_labels='CUE-OFF',
                            performance_in_trial_str='correct_trial',
                            belongs_to_trialtype=trial_type)[0]
[2024-02-07 16:55:52,613] root INFO: Extracting trial epochs for SGHF
[2024-02-07 16:55:52,616] alpaca.decorator - INFO: Line 139 -> trial_epochs = add_epoch(block.segments[0], events,
                                 pre=0 * pq.ms, post=500 * pq.ms,
                                 attach_result=False)
[2024-02-07 16:57:11,145] root INFO: Cutting trials of type SGHF
[2024-02-07 16:57:11,147] alpaca.decorator - INFO: Line 145 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                              trial_epochs)
[2024-02-07 16:58:38,891] root INFO: Computing PSD
[2024-02-07 16:58:38,893] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:38,971] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:39,035] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:39,109] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:39,115] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:39,119] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:39,197] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:39,256] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:39,322] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:39,328] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:39,331] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:39,409] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:39,468] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:39,532] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:39,538] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:39,541] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:39,619] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:39,677] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:39,742] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:39,747] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:39,750] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:39,828] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:39,889] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:39,956] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:39,961] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:39,965] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:40,042] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:40,102] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:40,167] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:40,173] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:40,176] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:40,254] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:40,312] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:40,377] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:40,383] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:40,386] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:40,464] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:40,524] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:40,589] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:40,595] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:40,598] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:40,675] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:40,733] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:40,799] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:40,804] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:40,807] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:40,884] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:40,944] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:41,010] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:41,016] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:41,019] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:41,096] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:41,157] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:41,223] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:41,228] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:41,232] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:41,309] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:41,367] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:41,432] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:41,437] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:41,441] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:41,518] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:41,576] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:41,642] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:41,648] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:41,651] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:41,727] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:41,789] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:41,854] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:41,860] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:41,863] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:41,941] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:42,000] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:42,065] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:42,071] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:42,075] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:42,151] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:42,213] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:42,279] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:42,284] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:42,287] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:42,365] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:42,424] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:42,489] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:42,495] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:42,499] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:42,576] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:42,634] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:42,699] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:42,704] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:42,708] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:42,785] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:42,847] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:42,921] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:42,927] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:42,931] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:43,008] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:43,066] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:43,131] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:43,137] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:43,141] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:43,219] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:43,277] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:43,343] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:43,349] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:43,352] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:43,429] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:43,488] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:43,552] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:43,558] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:43,562] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:43,639] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:43,697] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:43,762] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:43,768] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:43,771] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:43,849] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:43,908] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:43,972] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:43,978] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:43,982] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:44,059] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:44,120] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:44,186] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:44,192] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:44,195] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:44,273] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:44,331] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:44,396] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:44,402] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:44,406] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:44,483] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:44,541] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:44,606] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:44,612] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:44,615] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:44,693] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:44,754] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:44,820] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:44,827] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:44,830] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:44,907] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:44,968] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:45,033] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:45,039] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:45,043] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:45,120] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:45,181] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:45,247] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:45,252] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:45,255] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:45,332] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:45,390] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:45,456] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:45,461] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:45,465] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:45,542] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:45,601] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:45,667] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:45,673] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:45,677] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:45,754] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:45,813] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:45,879] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:45,884] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:45,888] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:45,965] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:46,024] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:46,089] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:46,096] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:46,099] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:46,176] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:46,234] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:46,299] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:46,305] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:46,308] alpaca.decorator - INFO: Line 156 -> signal = select_channels(trial.analogsignals[-1], skip_channels)
[2024-02-07 16:58:46,386] alpaca.decorator - INFO: Line 158 -> filtered_signal = butter(signal,
                                     lowpass_frequency=250 * pq.Hz)
[2024-02-07 16:58:46,444] alpaca.decorator - INFO: Line 161 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 16:58:46,510] alpaca.decorator - INFO: Line 163 -> freqs, psd = welch_psd(downsampled_signal,
                                   frequency_resolution=2 * pq.Hz)
[2024-02-07 16:58:46,515] alpaca.decorator - INFO: Line 166 -> avg_psd = mean(psd, axis=0)
[2024-02-07 16:58:46,519] alpaca.decorator - INFO: Line 174 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 16:58:46,547] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGHF.pickle
[2024-02-07 16:58:46,547] alpaca.decorator - INFO: Line 182 -> save_psd_data(output_file, frequencies, all_psds_stacked,
                      block.annotations['subject_name'])
[2024-02-07 16:59:34,569] root INFO: End time: 2024-02-07 16:59:34.569648; Total processing time:0:21:43.107272
[Wed Feb  7 16:59:36 2024]
Finished job 2.
2 of 4 steps (50%) done
Select jobs to execute...

[Wed Feb  7 16:59:36 2024]
rule plot_psds:
    input: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGHF.pickle
    output: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/R2G_PSD_all_subjects.png
    jobid: 1
    reason: Missing output files: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/R2G_PSD_all_subjects.png; Input files updated by another job: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGLF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGHF.pickle, /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGLF.pickle
    resources: tmpdir=/scratch/709570

[2024-02-07 16:59:38,965] root INFO: Start time: 2024-02-07 16:59:38.965338
[2024-02-07 16:59:39,067] root INFO: Processing files: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGLF.pickle,/users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_PGHF.pickle,/users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGLF.pickle,/users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/i140703-001_SGHF.pickle,/users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGLF.pickle,/users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_PGHF.pickle,/users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGLF.pickle,/users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/psds_by_trial_type/l101210-001_SGHF.pickle
[2024-02-07 16:59:39,067] alpaca.decorator - INFO: Line 140 -> fig, axes = create_main_plot_objects(n_subjects,
                                         "PSD for each trial type")
[2024-02-07 16:59:39,138] root INFO: Processing subject: i140703-001
[2024-02-07 16:59:39,138] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,322] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,326] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,329] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,334] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,342] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,345] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,347] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,351] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,358] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,361] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,363] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,367] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,374] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,377] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,380] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,386] alpaca.decorator - INFO: Line 163 -> set_title(axes[sub_idx], subject_name)
[2024-02-07 16:59:39,387] root INFO: Processing subject: l101210-001
[2024-02-07 16:59:39,387] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,394] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,397] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,400] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,403] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,410] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,413] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,416] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,419] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,426] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,429] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,432] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,435] alpaca.decorator - INFO: Line 150 -> frequencies, all_psds_stacked, subject_name = \
                load_psd_data(trial_data_file)
[2024-02-07 16:59:39,442] alpaca.decorator - INFO: Line 153 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,445] alpaca.decorator - INFO: Line 154 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 16:59:39,448] alpaca.decorator - INFO: Line 157 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                         color=color, lw=1, label=trial_type,
                         freq_range=[0, 49])
[2024-02-07 16:59:39,453] alpaca.decorator - INFO: Line 163 -> set_title(axes[sub_idx], subject_name)
[2024-02-07 16:59:39,454] root INFO: Saving output to /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/R2G_PSD_all_subjects.png
[2024-02-07 16:59:39,454] alpaca.decorator - INFO: Line 167 -> save_plot(fig, output_file, format='png', dpi=300)
[2024-02-07 16:59:40,955] root INFO: End time: 2024-02-07 16:59:40.955463; Total processing time:0:00:01.990125
[Wed Feb  7 16:59:41 2024]
Finished job 1.
3 of 4 steps (75%) done
Select jobs to execute...

[Wed Feb  7 16:59:41 2024]
localrule all:
    input: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/R2G_PSD_all_subjects.png, /users/koehler/projects/alpaca_use_case/data/i140703-001.nix, /users/koehler/projects/alpaca_use_case/data/l101210-001.nix
    jobid: 0
    reason: Input files updated by another job: /users/koehler/projects/alpaca_use_case/outputs/provenance_snakemake/R2G_PSD_all_subjects.png
    resources: tmpdir=/scratch/709570

[Wed Feb  7 16:59:41 2024]
Finished job 0.
4 of 4 steps (100%) done
Complete log: .snakemake/log/2024-02-07T163749.892942.snakemake.log
