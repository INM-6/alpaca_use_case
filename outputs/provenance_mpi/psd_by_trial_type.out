--------------------------------------------------------------------------
By default, for Open MPI 4.0 and later, infiniband ports on a device
are not used by default.  The intent is to use UCX for these devices.
You can override this policy by setting the btl_openib_allow_ib MCA parameter
to true.

  Local host:              hambach01
  Local adapter:           ibp2s0
  Local port:              1

--------------------------------------------------------------------------
--------------------------------------------------------------------------
WARNING: There was an error initializing an OpenFabrics device.

  Local host:   hambach01
  Local device: ibp2s0
--------------------------------------------------------------------------
[2024-02-07 12:31:21,200] root (rank=1) INFO: Start time: 2024-02-07 12:31:21.200652
[2024-02-07 12:31:21,200] root (rank=0) INFO: Start time: 2024-02-07 12:31:21.200719
[2024-02-07 12:31:21,359] root (rank=1) INFO: Processing files: /users/koehler/projects/alpaca_use_case/code/provenance_mpi/../../data/i140703-001.nix,/users/koehler/projects/alpaca_use_case/code/provenance_mpi/../../data/l101210-001.nix
[2024-02-07 12:31:21,359] root (rank=1) INFO: Processing /users/koehler/projects/alpaca_use_case/code/provenance_mpi/../../data/l101210-001.nix; skipping channels [2, 4]
[2024-02-07 12:31:21,359] root (rank=0) INFO: Processing files: /users/koehler/projects/alpaca_use_case/code/provenance_mpi/../../data/i140703-001.nix,/users/koehler/projects/alpaca_use_case/code/provenance_mpi/../../data/l101210-001.nix
[2024-02-07 12:31:21,359] alpaca.decorator - INFO: Line 221 -> block = load_data(subject_file)
[2024-02-07 12:31:21,360] alpaca.decorator - INFO: Line 204 -> fig, axes = create_main_plot_objects(n_subjects,
                                             "PSD for each trial type")
[2024-02-07 12:31:21,542] root (rank=0) INFO: Processing /users/koehler/projects/alpaca_use_case/code/provenance_mpi/../../data/i140703-001.nix; skipping channels None
[2024-02-07 12:31:21,542] alpaca.decorator - INFO: Line 221 -> block = load_data(subject_file)
[hambach01:488518] 1 more process has sent help message help-mpi-btl-openib.txt / ib port not selected
[hambach01:488518] Set MCA parameter "orte_base_help_aggregate" to 0 to see all help / error messages
[hambach01:488518] 1 more process has sent help message help-mpi-btl-openib.txt / error in device init
[2024-02-07 12:34:13,705] root (rank=1) INFO: Extracting starting events for PGLF
[2024-02-07 12:34:13,710] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:35:24,015] root (rank=1) INFO: Extracting trial epochs for PGLF
[2024-02-07 12:35:24,017] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:36:26,291] root (rank=1) INFO: Cutting trials of type PGLF
[2024-02-07 12:36:26,293] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:36:43,364] root (rank=0) INFO: Extracting starting events for PGLF
[2024-02-07 12:36:43,365] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:37:29,157] root (rank=1) INFO: Computing PSD
[2024-02-07 12:37:29,159] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:29,250] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:29,966] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
/users/koehler/miniconda3/envs/provenance-mpi/lib/python3.9/site-packages/scipy/signal/filter_design.py:1630: BadCoefficients: Badly conditioned filter coefficients (numerator): the results may be meaningless
  warnings.warn("Badly conditioned filter coefficients (numerator): the "
[2024-02-07 12:37:30,060] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:30,068] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:30,072] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:30,190] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:30,258] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:30,340] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:30,346] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:30,350] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:30,466] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:30,535] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:30,614] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:30,619] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:30,622] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:30,713] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:30,767] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:30,833] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:30,838] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:30,841] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:30,935] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:30,989] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:31,057] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:31,062] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:31,065] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:31,156] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:31,211] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:31,277] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:31,283] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:31,286] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:31,377] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:31,431] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:31,498] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:31,504] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:31,507] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:31,599] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:31,653] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:31,720] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:31,725] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:31,728] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:31,820] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:31,874] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:31,941] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:31,946] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:31,948] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:32,040] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:32,094] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:32,160] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:32,166] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:32,168] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:32,260] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:32,314] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:32,380] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:32,386] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:32,388] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:32,480] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:32,534] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:32,601] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:32,606] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:32,609] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:32,701] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:32,755] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:32,822] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:32,828] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:32,831] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:32,922] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:32,977] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:33,044] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:33,049] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:33,052] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:33,144] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:33,198] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:33,265] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:33,270] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:33,272] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:33,364] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:33,418] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:33,485] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:33,491] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:33,495] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:33,586] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:33,641] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:33,708] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:33,714] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:33,717] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:33,808] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:33,863] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:33,930] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:33,936] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:33,939] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:34,030] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:34,085] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:34,152] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:34,158] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:34,161] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:34,252] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:34,307] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:34,374] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:34,379] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:34,382] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:34,475] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:34,529] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:34,596] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:34,602] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:34,605] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:34,696] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:34,751] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:34,818] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:34,824] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:34,827] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:34,919] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:34,974] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:35,040] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:35,045] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:35,048] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:35,139] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:35,194] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:35,261] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:35,266] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:35,270] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:35,361] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:35,416] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:35,483] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:35,488] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:35,491] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:35,583] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:35,637] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:35,703] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:35,708] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:35,712] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:35,803] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:35,859] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:35,926] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:35,931] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:35,935] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:36,026] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:36,080] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:36,147] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:36,152] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:36,155] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:36,247] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:36,302] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:36,369] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:36,374] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:36,377] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:36,470] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:36,525] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:36,592] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:36,598] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:36,601] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:37:36,692] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:37:36,747] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:37:36,814] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:37:36,819] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:37:36,822] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:37:36,847] root (rank=1) INFO: Extracting starting events for PGHF
[2024-02-07 12:37:36,847] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:38:02,046] root (rank=0) INFO: Extracting trial epochs for PGLF
[2024-02-07 12:38:02,047] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:38:31,179] root (rank=1) INFO: Extracting trial epochs for PGHF
[2024-02-07 12:38:31,181] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:39:21,039] root (rank=0) INFO: Cutting trials of type PGLF
[2024-02-07 12:39:21,039] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:39:25,286] root (rank=1) INFO: Cutting trials of type PGHF
[2024-02-07 12:39:25,286] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:40:29,148] root (rank=1) INFO: Computing PSD
[2024-02-07 12:40:29,150] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:29,243] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:29,299] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:29,367] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:29,373] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:29,376] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:29,469] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:29,524] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:29,593] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:29,599] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:29,602] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:29,694] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:29,750] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:29,819] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:29,825] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:29,828] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:29,920] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:29,975] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:30,043] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:30,049] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:30,052] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:30,144] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:30,199] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:30,268] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:30,273] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:30,276] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:30,368] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:30,423] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:30,491] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:30,497] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:30,500] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:30,592] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:30,646] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:30,715] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:30,720] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:30,723] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:30,815] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:30,871] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:30,939] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:30,945] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:30,948] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:31,040] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:31,095] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:31,165] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:31,170] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:31,173] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:31,265] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:31,320] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:31,387] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:31,393] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:31,396] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:31,488] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:31,542] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:31,855] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:31,861] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:31,864] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:31,956] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:32,011] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:32,078] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:32,084] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:32,087] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:32,179] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:32,234] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:32,302] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:32,307] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:32,311] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:32,403] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:32,457] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:32,525] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:32,530] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:32,533] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:32,625] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:32,679] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:32,746] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:32,752] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:32,755] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:32,847] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:32,902] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:32,969] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:32,974] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:32,977] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:33,069] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:33,124] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:33,191] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:33,196] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:33,199] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:33,291] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:33,346] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:33,415] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:33,421] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:33,424] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:33,516] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:33,571] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:33,640] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:33,645] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:33,648] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:33,740] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:33,795] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:33,863] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:33,868] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:33,871] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:33,963] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:34,018] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:34,084] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:34,089] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:34,092] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:34,184] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:34,238] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:34,305] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:34,310] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:34,313] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:34,405] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:34,459] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:34,527] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:34,532] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:34,535] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:34,628] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:34,682] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:34,753] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:34,758] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:34,762] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:34,854] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:34,909] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:34,976] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:34,981] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:34,984] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:35,076] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:35,130] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:35,199] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:35,204] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:35,207] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:35,300] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:35,355] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:35,422] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:35,428] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:35,431] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:35,522] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:35,577] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:35,667] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:35,672] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:35,676] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:35,767] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:35,822] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:35,890] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:35,896] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:35,899] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:35,991] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:36,046] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:36,113] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:36,119] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:36,122] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:36,214] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:36,268] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:36,334] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:36,339] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:36,342] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:36,433] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:36,487] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:36,558] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:36,563] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:36,566] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:36,658] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:36,713] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:36,779] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:36,785] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:36,788] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:40:36,814] root (rank=1) INFO: Extracting starting events for SGLF
[2024-02-07 12:40:36,814] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:40:48,887] root (rank=0) INFO: Computing PSD
[2024-02-07 12:40:48,887] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:48,968] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:49,030] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
/users/koehler/miniconda3/envs/provenance-mpi/lib/python3.9/site-packages/scipy/signal/filter_design.py:1630: BadCoefficients: Badly conditioned filter coefficients (numerator): the results may be meaningless
  warnings.warn("Badly conditioned filter coefficients (numerator): the "
[2024-02-07 12:40:49,102] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:49,108] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:49,111] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:49,192] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:49,254] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:49,323] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:49,328] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:49,331] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:49,412] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:49,474] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:49,541] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:49,547] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:49,550] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:49,631] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:49,693] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:49,761] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:49,766] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:49,770] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:49,851] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:49,912] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:49,981] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:49,986] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:49,990] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:50,070] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:50,132] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:50,199] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:50,205] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:50,208] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:50,289] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:50,350] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:50,419] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:50,424] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:50,426] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:50,507] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:50,570] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:50,638] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:50,643] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:50,646] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:50,727] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:50,789] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:50,857] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:50,862] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:50,866] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:50,946] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:51,008] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:51,076] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:51,082] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:51,085] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:51,166] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:51,228] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:51,295] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:51,301] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:51,304] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:51,386] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:51,447] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:51,514] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:51,520] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:51,523] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:51,604] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:51,665] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:51,733] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:51,738] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:51,741] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:51,822] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:51,883] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:51,954] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:51,959] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:51,962] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:52,043] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:52,104] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:52,171] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:52,177] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:52,180] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:52,261] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:52,322] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:52,390] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:52,396] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:52,400] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:52,481] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:52,543] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:52,610] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:52,616] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:52,619] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:52,700] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:52,761] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:52,828] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:52,834] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:52,837] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:52,917] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:52,979] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:53,047] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:53,053] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:53,056] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:53,136] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:53,198] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:53,266] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:53,272] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:53,275] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:53,356] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:53,417] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:53,485] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:53,490] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:53,493] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:53,574] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:53,635] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:53,703] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:53,709] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:53,712] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:53,793] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:53,855] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:53,923] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:53,928] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:53,931] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:54,012] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:54,073] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:54,141] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:54,147] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:54,150] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:54,230] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:54,292] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:54,360] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:54,366] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:54,369] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:54,449] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:54,510] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:54,579] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:54,584] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:54,587] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:54,667] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:54,728] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:54,794] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:54,800] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:54,803] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:54,884] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:54,945] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:55,013] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:55,018] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:55,022] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:55,103] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:55,164] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:55,232] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:55,237] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:55,240] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:55,321] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:55,382] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:55,451] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:55,457] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:55,460] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:55,540] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:55,602] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:55,670] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:55,675] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:55,679] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:55,759] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:55,821] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:55,889] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:55,894] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:55,897] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:55,978] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:56,040] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:56,108] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:56,113] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:56,116] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:56,196] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:56,257] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:56,325] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:56,331] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:56,334] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:40:56,414] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:40:56,476] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:40:56,544] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:40:56,550] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:40:56,553] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:40:56,581] root (rank=0) INFO: Extracting starting events for PGHF
[2024-02-07 12:40:56,582] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:41:30,830] root (rank=1) INFO: Extracting trial epochs for SGLF
[2024-02-07 12:41:30,832] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:42:15,234] root (rank=0) INFO: Extracting trial epochs for PGHF
[2024-02-07 12:42:15,235] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:42:24,701] root (rank=1) INFO: Cutting trials of type SGLF
[2024-02-07 12:42:24,701] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:43:31,661] root (rank=1) INFO: Computing PSD
[2024-02-07 12:43:31,663] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:31,756] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:31,812] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:31,879] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:31,884] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:31,887] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:31,981] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:32,035] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:32,103] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:32,109] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:32,112] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:32,204] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:32,259] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:32,327] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:32,332] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:32,336] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:32,428] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:32,483] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:32,550] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:32,555] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:32,558] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:32,651] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:32,706] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:32,773] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:32,778] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:32,781] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:32,873] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:32,929] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:32,996] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:33,001] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:33,004] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:33,096] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:33,151] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:33,218] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:33,223] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:33,227] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:33,319] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:33,374] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:33,441] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:33,446] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:33,449] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:33,541] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:33,596] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:33,665] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:33,670] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:33,673] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:33,765] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:33,820] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:33,887] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:33,893] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:33,896] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:33,988] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:34,043] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:34,111] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:34,116] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:34,119] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:34,211] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:34,266] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:34,334] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:34,339] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:34,343] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:34,435] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:34,490] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:34,558] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:34,563] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:34,567] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:34,659] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:34,714] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:34,780] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:34,786] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:34,789] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:34,882] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:34,937] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:35,004] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:35,009] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:35,012] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:35,105] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:35,159] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:35,224] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:35,229] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:35,232] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:35,324] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:35,341] root (rank=0) INFO: Cutting trials of type PGHF
[2024-02-07 12:43:35,342] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:43:35,379] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:35,447] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:35,453] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:35,455] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:35,548] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:35,602] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:35,671] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:35,676] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:35,679] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:35,771] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:35,826] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:35,894] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:35,900] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:35,903] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:35,995] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:36,050] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:36,116] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:36,122] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:36,125] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:36,217] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:36,272] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:36,339] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:36,344] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:36,348] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:36,440] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:36,495] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:36,562] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:36,568] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:36,571] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:36,663] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:36,718] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:36,785] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:36,790] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:36,794] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:36,887] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:36,942] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:37,010] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:37,015] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:37,018] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:37,111] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:37,167] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:37,234] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:37,239] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:37,243] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:37,336] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:37,391] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:37,458] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:37,464] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:37,467] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:37,559] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:37,614] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:37,682] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:37,687] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:37,690] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:37,782] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:37,837] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:37,905] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:37,910] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:37,913] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:38,005] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:38,060] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:38,127] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:38,132] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:38,135] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:38,228] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:38,283] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:38,350] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:38,355] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:38,359] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:38,451] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:38,506] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:38,573] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:38,578] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:38,582] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:38,674] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:38,729] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:38,797] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:38,802] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:38,805] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:38,897] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:38,952] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:39,019] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:39,024] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:39,027] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:39,119] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:39,174] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:39,242] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:39,248] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:39,251] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:39,343] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:39,399] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:39,466] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:39,472] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:39,475] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:39,567] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:39,622] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:39,689] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:39,694] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:39,697] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:39,789] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:39,843] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:39,912] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:39,917] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:39,920] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:40,012] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:40,067] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:40,134] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:40,140] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:40,143] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:40,236] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:40,292] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:40,360] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:40,365] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:40,368] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:40,461] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:40,516] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:40,583] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:40,589] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:40,592] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:43:40,684] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:43:40,739] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:43:40,807] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:43:40,813] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:43:40,816] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:43:40,848] root (rank=1) INFO: Extracting starting events for SGHF
[2024-02-07 12:43:40,848] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:44:34,988] root (rank=1) INFO: Extracting trial epochs for SGHF
[2024-02-07 12:44:34,990] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:45:03,637] root (rank=0) INFO: Computing PSD
[2024-02-07 12:45:03,637] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:03,718] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:03,781] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:03,850] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:03,856] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:03,860] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:03,941] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:04,003] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:04,071] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:04,077] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:04,080] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:04,160] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:04,222] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:04,291] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:04,296] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:04,299] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:04,380] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:04,441] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:04,509] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:04,514] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:04,518] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:04,598] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:04,660] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:04,729] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:04,734] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:04,737] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:04,818] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:04,879] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:04,948] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:04,953] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:04,956] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:05,036] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:05,098] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:05,165] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:05,170] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:05,174] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:05,254] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:05,315] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:05,384] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:05,389] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:05,392] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:05,472] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:05,533] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:05,600] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:05,605] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:05,608] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:05,688] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:05,749] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:05,817] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:05,822] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:05,825] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:05,906] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:05,968] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:06,035] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:06,041] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:06,043] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:06,123] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:06,186] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:06,254] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:06,259] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:06,263] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:06,343] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:06,404] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:06,472] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:06,477] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:06,480] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:06,560] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:06,622] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:06,689] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:06,694] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:06,698] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:06,778] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:06,839] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:06,907] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:06,913] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:06,915] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:06,996] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:07,057] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:07,124] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:07,129] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:07,132] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:07,213] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:07,275] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:07,343] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:07,348] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:07,351] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:07,432] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:07,493] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:07,560] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:07,566] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:07,569] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:07,649] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:07,710] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:07,778] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:07,784] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:07,787] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:07,867] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:07,928] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:07,996] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:08,001] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:08,004] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:08,084] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:08,146] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:08,214] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:08,219] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:08,222] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:08,303] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:08,364] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:08,433] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:08,438] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:08,441] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:08,521] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:08,582] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:08,650] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:08,655] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:08,658] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:08,740] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:08,801] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:08,868] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:08,874] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:08,876] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:08,956] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:09,018] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:09,085] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:09,091] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:09,094] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:09,174] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:09,236] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:09,304] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:09,309] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:09,312] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:09,393] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:09,454] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:09,522] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:09,528] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:09,531] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:09,611] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:09,673] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:09,741] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:09,746] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:09,749] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:09,829] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:09,891] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:09,959] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:09,965] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:09,968] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:10,047] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:10,109] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:10,176] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:10,181] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:10,184] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:10,264] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:10,325] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:10,393] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:10,398] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:10,401] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:10,482] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:10,543] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:10,611] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:10,617] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:10,620] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:10,699] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:10,761] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:10,829] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:10,834] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:10,837] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:10,917] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:10,978] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:11,047] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:11,053] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:11,056] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:11,135] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:11,197] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:11,264] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:11,270] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:11,272] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:45:11,353] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:45:11,414] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:45:11,483] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:45:11,489] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:45:11,492] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:45:11,521] root (rank=0) INFO: Extracting starting events for SGLF
[2024-02-07 12:45:11,521] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:45:29,006] root (rank=1) INFO: Cutting trials of type SGHF
[2024-02-07 12:45:29,007] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:46:30,297] root (rank=0) INFO: Extracting trial epochs for SGLF
[2024-02-07 12:46:30,298] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:46:32,074] root (rank=1) INFO: Computing PSD
[2024-02-07 12:46:32,075] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:32,168] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:32,223] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:32,291] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:32,296] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:32,300] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:32,392] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:32,447] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:32,515] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:32,521] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:32,524] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:32,617] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:32,674] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:32,739] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:32,745] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:32,748] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:32,841] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:32,896] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:32,963] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:32,968] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:32,971] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:33,063] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:33,119] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:33,210] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:33,215] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:33,219] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:33,311] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:33,367] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:33,458] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:33,463] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:33,466] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:33,557] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:33,614] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:33,704] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:33,709] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:33,712] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:33,804] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:33,861] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:33,950] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:33,956] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:33,959] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:34,051] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:34,108] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:34,198] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:34,203] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:34,206] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:34,299] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:34,356] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:34,446] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:34,451] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:34,454] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:34,546] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:34,603] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:34,693] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:34,698] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:34,701] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:34,793] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:34,849] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:34,939] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:34,944] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:34,947] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:35,039] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:35,095] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:35,186] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:35,191] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:35,194] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:35,287] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:35,343] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:35,410] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:35,416] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:35,419] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:35,512] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:35,567] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:35,634] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:35,640] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:35,643] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:35,735] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:35,791] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:35,860] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:35,866] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:35,869] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:35,962] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:36,017] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:36,084] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:36,090] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:36,093] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:36,185] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:36,240] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:36,307] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:36,313] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:36,316] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:36,408] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:36,463] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:36,533] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:36,538] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:36,541] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:36,634] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:36,690] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:36,758] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:36,763] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:36,766] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:36,858] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:36,914] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:36,981] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:36,986] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:36,990] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:37,083] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:37,139] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:37,208] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:37,214] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:37,218] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:37,310] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:37,365] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:37,432] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:37,437] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:37,440] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:37,533] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:37,588] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:37,655] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:37,661] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:37,664] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:37,756] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:37,811] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:37,879] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:37,884] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:37,887] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:37,980] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:38,035] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:38,103] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:38,108] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:38,111] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:38,203] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:38,258] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:38,328] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:38,333] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:38,336] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:38,429] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:38,484] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:38,551] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:38,557] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:38,560] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:38,652] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:38,706] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:38,774] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:38,780] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:38,783] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:46:38,875] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:46:38,930] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:46:39,000] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:46:39,005] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:46:39,008] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:46:39,032] root (rank=1) INFO: Sending 1 to 0
[2024-02-07 12:47:49,396] root (rank=0) INFO: Cutting trials of type SGLF
[2024-02-07 12:47:49,397] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:49:17,773] root (rank=0) INFO: Computing PSD
[2024-02-07 12:49:17,775] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:17,856] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:17,918] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:17,983] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:17,989] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:17,992] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:18,073] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:18,133] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:18,202] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:18,208] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:18,211] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:18,291] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:18,351] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:18,419] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:18,424] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:18,427] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:18,508] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:18,567] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:18,633] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:18,638] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:18,640] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:18,721] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:18,782] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:18,848] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:18,853] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:18,856] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:18,936] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:18,996] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:19,061] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:19,066] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:19,069] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:19,148] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:19,209] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:19,274] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:19,279] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:19,282] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:19,361] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:19,421] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:19,485] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:19,490] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:19,494] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:19,573] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:19,632] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:19,698] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:19,703] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:19,706] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:19,786] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:19,845] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:19,910] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:19,916] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:19,919] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:19,998] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:20,058] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:20,124] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:20,129] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:20,132] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:20,211] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:20,271] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:20,337] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:20,342] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:20,345] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:20,424] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:20,484] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:20,549] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:20,554] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:20,557] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:20,637] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:20,696] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:20,761] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:20,766] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:20,770] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:20,849] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:20,909] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:20,974] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:20,979] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:20,982] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:21,062] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:21,122] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:21,187] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:21,193] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:21,196] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:21,275] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:21,335] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:21,401] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:21,406] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:21,409] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:21,489] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:21,549] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:21,615] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:21,620] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:21,623] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:21,703] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:21,763] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:21,828] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:21,833] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:21,836] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:21,916] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:21,976] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:22,041] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:22,047] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:22,050] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:22,130] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:22,190] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:22,255] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:22,260] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:22,263] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:22,343] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:22,403] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:22,467] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:22,473] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:22,476] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:22,555] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:22,615] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:22,680] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:22,685] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:22,688] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:22,768] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:22,828] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:22,893] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:22,898] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:22,901] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:22,981] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:23,041] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:23,105] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:23,110] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:23,113] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:23,193] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:23,253] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:23,318] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:23,323] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:23,326] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:23,406] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:23,466] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:23,532] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:23,537] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:23,540] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:23,620] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:23,680] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:23,745] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:23,750] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:23,753] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:23,832] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:23,891] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:23,957] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:23,962] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:23,965] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:24,044] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:24,104] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:24,170] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:24,175] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:24,179] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:24,258] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:24,318] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:24,383] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:24,389] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:24,392] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:24,471] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:24,532] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:24,596] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:24,602] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:24,605] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:24,684] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:24,744] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:24,809] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:24,814] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:24,818] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:24,898] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:24,957] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:25,022] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:25,028] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:25,031] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:49:25,111] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:49:25,170] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:49:25,235] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:49:25,241] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:49:25,244] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:49:25,273] root (rank=0) INFO: Extracting starting events for SGHF
[2024-02-07 12:49:25,273] alpaca.decorator - INFO: Line 237 -> events = get_events(block.segments[0],
                                trial_event_labels='CUE-OFF',
                                performance_in_trial_str='correct_trial',
                                belongs_to_trialtype=trial_type)[0]
[2024-02-07 12:50:44,177] root (rank=0) INFO: Extracting trial epochs for SGHF
[2024-02-07 12:50:44,178] alpaca.decorator - INFO: Line 244 -> trial_epochs = add_epoch(block.segments[0], events,
                                     pre=0 * pq.ms, post=500 * pq.ms,
                                     attach_result=False)
[2024-02-07 12:52:03,082] root (rank=0) INFO: Cutting trials of type SGHF
[2024-02-07 12:52:03,083] alpaca.decorator - INFO: Line 250 -> trial_segments = cut_segment_by_epoch(block.segments[0],
                                                  trial_epochs)
[2024-02-07 12:53:32,687] root (rank=0) INFO: Computing PSD
[2024-02-07 12:53:32,689] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:32,770] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:32,832] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:32,898] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:32,903] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:32,907] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:32,988] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:33,048] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:33,114] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:33,119] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:33,123] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:33,203] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:33,262] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:33,328] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:33,333] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:33,336] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:33,416] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:33,476] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:33,541] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:33,547] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:33,550] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:33,630] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:33,690] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:33,755] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:33,761] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:33,764] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:33,844] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:33,903] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:33,969] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:33,974] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:33,978] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:34,058] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:34,122] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:34,188] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:34,193] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:34,196] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:34,276] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:34,338] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:34,405] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:34,411] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:34,414] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:34,493] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:34,553] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:34,618] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:34,623] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:34,626] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:34,706] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:34,765] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:34,831] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:34,836] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:34,839] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:34,919] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:34,979] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:35,045] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:35,050] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:35,053] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:35,133] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:35,193] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:35,258] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:35,263] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:35,267] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:35,349] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:35,409] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:35,474] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:35,479] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:35,483] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:35,562] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:35,623] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:35,688] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:35,694] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:35,697] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:35,776] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:35,836] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:35,901] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:35,906] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:35,910] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:35,989] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:36,049] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:36,114] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:36,120] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:36,123] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:36,203] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:36,263] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:36,328] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:36,333] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:36,336] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:36,416] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:36,476] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:36,541] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:36,546] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:36,550] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:36,629] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:36,689] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:36,754] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:36,760] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:36,763] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:36,843] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:36,903] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:36,969] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:36,974] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:36,977] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:37,057] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:37,117] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:37,182] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:37,187] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:37,191] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:37,270] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:37,331] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:37,396] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:37,401] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:37,404] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:37,484] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:37,544] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:37,610] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:37,615] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:37,619] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:37,698] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:37,759] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:37,825] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:37,830] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:37,833] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:37,913] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:37,973] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:38,037] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:38,043] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:38,046] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:38,126] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:38,187] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:38,252] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:38,258] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:38,261] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:38,341] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:38,401] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:38,465] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:38,471] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:38,474] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:38,554] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:38,614] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:38,680] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:38,685] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:38,688] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:38,768] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:38,828] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:38,893] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:38,898] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:38,901] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:38,980] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:39,040] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:39,106] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:39,112] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:39,115] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:39,195] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:39,255] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:39,322] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:39,327] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:39,331] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:39,411] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:39,471] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:39,537] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:39,542] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:39,546] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:39,626] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:39,686] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:39,751] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:39,756] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:39,759] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:39,839] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:39,899] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:39,964] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:39,970] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:39,973] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:40,053] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:40,113] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:40,178] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:40,183] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:40,187] alpaca.decorator - INFO: Line 261 -> signal = select_channels(trial.analogsignals[-1], skip)
[2024-02-07 12:53:40,266] alpaca.decorator - INFO: Line 263 -> filtered_signal = butter(signal,
                                         lowpass_frequency=250 * pq.Hz)
[2024-02-07 12:53:40,327] alpaca.decorator - INFO: Line 266 -> downsampled_signal = filtered_signal.downsample(60)
[2024-02-07 12:53:40,393] alpaca.decorator - INFO: Line 268 -> freqs, psd = welch_psd(downsampled_signal,
                                       frequency_resolution=2 * pq.Hz)
[2024-02-07 12:53:40,398] alpaca.decorator - INFO: Line 271 -> avg_psd = mean(psd, axis=0)
[2024-02-07 12:53:40,401] alpaca.decorator - INFO: Line 279 -> all_psds_stacked = vstack_quantities(*all_psds)
[2024-02-07 12:53:40,430] root (rank=0) INFO: Receiving 1
[2024-02-07 12:53:40,432] root (rank=1) INFO: Sent to 0
[2024-02-07 12:53:40,438] root (rank=0) INFO: Received from 1
[2024-02-07 12:53:40,438] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,441] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,444] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,449] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,451] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,454] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,457] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,459] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,461] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,464] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,467] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,469] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,475] alpaca.decorator - INFO: Line 317 -> set_title(axes[sub_idx], subject_name)
[2024-02-07 12:53:40,475] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,478] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,480] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,483] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,485] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,488] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,491] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,493] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,495] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,498] alpaca.decorator - INFO: Line 307 -> psd_mean = mean(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,501] alpaca.decorator - INFO: Line 308 -> psd_sem = sem(all_psds_stacked, axis=0)
[2024-02-07 12:53:40,503] alpaca.decorator - INFO: Line 310 -> plot_lfp_psd(axes[sub_idx], frequencies, psd_mean, psd_sem,
                             color=trial_types[trial_type], lw=1,
                             label=trial_type, freq_range=[0, 49])
[2024-02-07 12:53:40,509] alpaca.decorator - INFO: Line 317 -> set_title(axes[sub_idx], subject_name)
[2024-02-07 12:53:40,509] root (rank=0) INFO: Saving output to /users/koehler/projects/alpaca_use_case/code/provenance_mpi/../../outputs/provenance_mpi/R2G_PSD_all_subjects.png
[2024-02-07 12:53:40,510] alpaca.decorator - INFO: Line 322 -> save_plot(fig, out_file, format='png', dpi=300)
[2024-02-07 12:54:04,856] root (rank=0) INFO: End time: 2024-02-07 12:54:04.856510; Total processing time:0:22:43.655791
[2024-02-07 12:54:09,655] root (rank=1) INFO: End time: 2024-02-07 12:54:09.655576; Total processing time:0:22:48.454924
